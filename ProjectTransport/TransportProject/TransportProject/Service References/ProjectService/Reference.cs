//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TransportProject.ProjectService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Route", Namespace="http://schemas.datacontract.org/2004/07/GPSDataService.Models", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Route : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TransportProject.ProjectService.GPSPos EndPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TransportProject.ProjectService.GPSData[] RouteDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RouteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RouteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TransportProject.ProjectService.GPSPos StartPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TransportProject.ProjectService.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransportProject.ProjectService.GPSPos EndPoint {
            get {
                return this.EndPointField;
            }
            set {
                if ((object.ReferenceEquals(this.EndPointField, value) != true)) {
                    this.EndPointField = value;
                    this.RaisePropertyChanged("EndPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransportProject.ProjectService.GPSData[] RouteData {
            get {
                return this.RouteDataField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteDataField, value) != true)) {
                    this.RouteDataField = value;
                    this.RaisePropertyChanged("RouteData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RouteId {
            get {
                return this.RouteIdField;
            }
            set {
                if ((this.RouteIdField.Equals(value) != true)) {
                    this.RouteIdField = value;
                    this.RaisePropertyChanged("RouteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RouteName {
            get {
                return this.RouteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteNameField, value) != true)) {
                    this.RouteNameField = value;
                    this.RaisePropertyChanged("RouteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransportProject.ProjectService.GPSPos StartPoint {
            get {
                return this.StartPointField;
            }
            set {
                if ((object.ReferenceEquals(this.StartPointField, value) != true)) {
                    this.StartPointField = value;
                    this.RaisePropertyChanged("StartPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransportProject.ProjectService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GPSPos", Namespace="http://schemas.datacontract.org/2004/07/GPSDataService.Models", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class GPSPos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/GPSDataService.Models", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TransportProject.ProjectService.Route[] RoutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransportProject.ProjectService.Route[] Routes {
            get {
                return this.RoutesField;
            }
            set {
                if ((object.ReferenceEquals(this.RoutesField, value) != true)) {
                    this.RoutesField = value;
                    this.RaisePropertyChanged("Routes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GPSData", Namespace="http://schemas.datacontract.org/2004/07/GPSDataService.Models", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class GPSData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TransportProject.ProjectService.AdditionalCost[] AdditionalCostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FuelLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TransportProject.ProjectService.GPSPos PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TransportProject.ProjectService.Route RouteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransportProject.ProjectService.AdditionalCost[] AdditionalCosts {
            get {
                return this.AdditionalCostsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalCostsField, value) != true)) {
                    this.AdditionalCostsField = value;
                    this.RaisePropertyChanged("AdditionalCosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FuelLevel {
            get {
                return this.FuelLevelField;
            }
            set {
                if ((this.FuelLevelField.Equals(value) != true)) {
                    this.FuelLevelField = value;
                    this.RaisePropertyChanged("FuelLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransportProject.ProjectService.GPSPos Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransportProject.ProjectService.Route Route {
            get {
                return this.RouteField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteField, value) != true)) {
                    this.RouteField = value;
                    this.RaisePropertyChanged("Route");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdditionalCost", Namespace="http://schemas.datacontract.org/2004/07/GPSDataService.Models")]
    [System.SerializableAttribute()]
    public partial class AdditionalCost : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TransportProject.ProjectService.GPSData RouteDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransportProject.ProjectService.GPSData RouteData {
            get {
                return this.RouteDataField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteDataField, value) != true)) {
                    this.RouteDataField = value;
                    this.RaisePropertyChanged("RouteData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProjectService.IClientService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddRoute", ReplyAction="http://tempuri.org/IClientService/AddRouteResponse")]
        bool AddRoute(TransportProject.ProjectService.Route data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddRoute", ReplyAction="http://tempuri.org/IClientService/AddRouteResponse")]
        System.Threading.Tasks.Task<bool> AddRouteAsync(TransportProject.ProjectService.Route data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddRoutes", ReplyAction="http://tempuri.org/IClientService/AddRoutesResponse")]
        bool AddRoutes(TransportProject.ProjectService.Route[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddRoutes", ReplyAction="http://tempuri.org/IClientService/AddRoutesResponse")]
        System.Threading.Tasks.Task<bool> AddRoutesAsync(TransportProject.ProjectService.Route[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllRoutes", ReplyAction="http://tempuri.org/IClientService/GetAllRoutesResponse")]
        TransportProject.ProjectService.Route[] GetAllRoutes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllRoutes", ReplyAction="http://tempuri.org/IClientService/GetAllRoutesResponse")]
        System.Threading.Tasks.Task<TransportProject.ProjectService.Route[]> GetAllRoutesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRouteById", ReplyAction="http://tempuri.org/IClientService/GetRouteByIdResponse")]
        TransportProject.ProjectService.Route GetRouteById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRouteById", ReplyAction="http://tempuri.org/IClientService/GetRouteByIdResponse")]
        System.Threading.Tasks.Task<TransportProject.ProjectService.Route> GetRouteByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateRoute", ReplyAction="http://tempuri.org/IClientService/UpdateRouteResponse")]
        bool UpdateRoute(TransportProject.ProjectService.Route route);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateRoute", ReplyAction="http://tempuri.org/IClientService/UpdateRouteResponse")]
        System.Threading.Tasks.Task<bool> UpdateRouteAsync(TransportProject.ProjectService.Route route);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Test", ReplyAction="http://tempuri.org/IClientService/TestResponse")]
        string Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Test", ReplyAction="http://tempuri.org/IClientService/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Delete", ReplyAction="http://tempuri.org/IClientService/DeleteResponse")]
        bool Delete(TransportProject.ProjectService.Route route);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Delete", ReplyAction="http://tempuri.org/IClientService/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(TransportProject.ProjectService.Route route);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Login", ReplyAction="http://tempuri.org/IClientService/LoginResponse")]
        string Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Login", ReplyAction="http://tempuri.org/IClientService/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Register", ReplyAction="http://tempuri.org/IClientService/RegisterResponse")]
        string Register(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Register", ReplyAction="http://tempuri.org/IClientService/RegisterResponse")]
        System.Threading.Tasks.Task<string> RegisterAsync(string login, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientServiceChannel : TransportProject.ProjectService.IClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientServiceClient : System.ServiceModel.ClientBase<TransportProject.ProjectService.IClientService>, TransportProject.ProjectService.IClientService {
        
        public ClientServiceClient() {
        }
        
        public ClientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddRoute(TransportProject.ProjectService.Route data) {
            return base.Channel.AddRoute(data);
        }
        
        public System.Threading.Tasks.Task<bool> AddRouteAsync(TransportProject.ProjectService.Route data) {
            return base.Channel.AddRouteAsync(data);
        }
        
        public bool AddRoutes(TransportProject.ProjectService.Route[] data) {
            return base.Channel.AddRoutes(data);
        }
        
        public System.Threading.Tasks.Task<bool> AddRoutesAsync(TransportProject.ProjectService.Route[] data) {
            return base.Channel.AddRoutesAsync(data);
        }
        
        public TransportProject.ProjectService.Route[] GetAllRoutes() {
            return base.Channel.GetAllRoutes();
        }
        
        public System.Threading.Tasks.Task<TransportProject.ProjectService.Route[]> GetAllRoutesAsync() {
            return base.Channel.GetAllRoutesAsync();
        }
        
        public TransportProject.ProjectService.Route GetRouteById(int id) {
            return base.Channel.GetRouteById(id);
        }
        
        public System.Threading.Tasks.Task<TransportProject.ProjectService.Route> GetRouteByIdAsync(int id) {
            return base.Channel.GetRouteByIdAsync(id);
        }
        
        public bool UpdateRoute(TransportProject.ProjectService.Route route) {
            return base.Channel.UpdateRoute(route);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRouteAsync(TransportProject.ProjectService.Route route) {
            return base.Channel.UpdateRouteAsync(route);
        }
        
        public string Test() {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<string> TestAsync() {
            return base.Channel.TestAsync();
        }
        
        public bool Delete(TransportProject.ProjectService.Route route) {
            return base.Channel.Delete(route);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(TransportProject.ProjectService.Route route) {
            return base.Channel.DeleteAsync(route);
        }
        
        public string Login(string login1, string password) {
            return base.Channel.Login(login1, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string login, string password) {
            return base.Channel.LoginAsync(login, password);
        }
        
        public string Register(string login, string password) {
            return base.Channel.Register(login, password);
        }
        
        public System.Threading.Tasks.Task<string> RegisterAsync(string login, string password) {
            return base.Channel.RegisterAsync(login, password);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProjectService.IRemoteService")]
    public interface IRemoteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteService/RemoteAddRoute", ReplyAction="http://tempuri.org/IRemoteService/RemoteAddRouteResponse")]
        bool RemoteAddRoute(TransportProject.ProjectService.Route data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteService/RemoteAddRoute", ReplyAction="http://tempuri.org/IRemoteService/RemoteAddRouteResponse")]
        System.Threading.Tasks.Task<bool> RemoteAddRouteAsync(TransportProject.ProjectService.Route data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRemoteServiceChannel : TransportProject.ProjectService.IRemoteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoteServiceClient : System.ServiceModel.ClientBase<TransportProject.ProjectService.IRemoteService>, TransportProject.ProjectService.IRemoteService {
        
        public RemoteServiceClient() {
        }
        
        public RemoteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RemoteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemoteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemoteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RemoteAddRoute(TransportProject.ProjectService.Route data) {
            return base.Channel.RemoteAddRoute(data);
        }
        
        public System.Threading.Tasks.Task<bool> RemoteAddRouteAsync(TransportProject.ProjectService.Route data) {
            return base.Channel.RemoteAddRouteAsync(data);
        }
    }
}
